Core Game Mechanics
perform_rest()

Description: Allows the user and their group to rest, restoring health or stamina while consuming minimal resources.
Inputs:
population: List of individuals.
Outputs:
Health and stamina levels are updated.
perform_travel(destination, transportation)

Description: Moves the user and their group to a new location.
Inputs:
destination: Target location coordinates or object.
transportation: A multiplier that determines travel speed and cost.
Outputs:
New location.
Consumes resources based on travel time and transportation type.
perform_mission(mission_type, participants)

Description: Assigns a mission to specific individuals, producing or gathering resources.
Inputs:
mission_type: The type of mission (e.g., survey, intelligence, research, negotiate, work).
participants: List of individuals assigned to the mission.
Outputs:
Resource production or intelligence gathered.
Updates status of participants (energy, health, etc.).
perform_talk(target_person, topic)

Description: Engages in a conversation with a specific person to negotiate, trade, or build relationships.
Inputs:
target_person: NPC or group.
topic: The subject of discussion (e.g., trade deal, alliance, etc.).
Outputs:
Updated relationships or exchanged resources.
perform_create(create_type, inputs)

Description: Allows the user to create something new, such as mental resources, stories, or task groups.
Inputs:
create_type: The type of creation (e.g., story, plan, task group).
inputs: Required materials, individuals, or existing resources.
Outputs:
New resource or structure.
Consumes inputs.
perform_train(train_type, participants)

Description: Increases the stats of individuals in a specific area (physical, mental, spiritual).
Inputs:
train_type: Stat to improve.
participants: List of individuals being trained.
Outputs:
Improved stats for participants.
Resource consumption for training.
Supporting Functions
combine_resources(resource_list)

Description: Combines multiple resources and individuals to create advanced resources or structures.
Inputs:
resource_list: List of resources and individuals to combine.
Outputs:
New specialized resource or structure.
Updates resource inventory.
manage_supply_chain(supply_chain_map)

Description: Ensures all task groups and structures are maintained by managing resource allocation.
Inputs:
supply_chain_map: Map of tasks/groups and required resources.
Outputs:
Updated resource levels.
Alerts if supply is insufficient.
update_population_status(population)

Description: Updates the health, energy, and stats of all individuals based on tasks, rest, and resource availability.
Inputs:
population: List of individuals and their statuses.
Outputs:
Updated population status.
allocate_actions(actions_remaining)

Description: Tracks the userâ€™s actions during a turn and ensures the three-action limit.
Inputs:
actions_remaining: Counter of actions available this turn.
Outputs:
Updated action counter.
resolve_turn_events()

Description: Handles all end-of-turn updates, such as resource depletion, structure upkeep, and mission results.
Outputs:
Updated game state.
Example Workflow
Start turn:
Allocate three actions using allocate_actions.
Player performs actions:
Choose Rest, Travel, Mission, Talk, Create, or Train.
Each action updates game state.
End turn:
Call resolve_turn_events to process upkeep and mission results.
Update game state for the next turn.
